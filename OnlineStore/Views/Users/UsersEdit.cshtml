


@model OnlineStore.Models.UserVM

@{
    ViewBag.Title = "Users Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<hr />
<h2>Edit User</h2>
<hr />



@using (Html.BeginForm("UsersEdit", "Users", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.RoleId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", @readOnly = "Readonly" })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", maxlength = 60 })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", placeholder = "Password", @type = "password" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <button type="button" id="btnPassword">
            Show Password
        </button>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RoleId, Model.RoleList, new { @class = "form-control text-bg-dark ", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>

    </div>
    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Go To Users Details", "UsersDetails", "Users", null, new { @class = "" })
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/CustomJs/UserJs.js"></script>
}   